{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// create slice\n\nconst name = 'alert';\nconst initialState = createInitialState();\nconst reducers = createReducers();\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers\n});\n\n// exports\n\nexport const alertActions = {\n  ...slice.actions\n};\nexport const alertReducer = slice.reducer;\n\n// implementation\n\nfunction createInitialState() {\n  return {\n    value: null\n  };\n}\nfunction createReducers() {\n  return {\n    success,\n    error,\n    clear\n  };\n\n  // payload can be a string message ('alert message') or \n  // an object ({ message: 'alert message', showAfterRedirect: true })\n  function success(state, action) {\n    var _action$payload, _action$payload2;\n    state.value = {\n      type: 'alert-success',\n      message: ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) || action.payload,\n      showAfterRedirect: (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.showAfterRedirect\n    };\n  }\n  function error(state, action) {\n    var _action$payload3, _action$payload4;\n    state.value = {\n      type: 'alert-danger',\n      message: ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.message) || action.payload,\n      showAfterRedirect: (_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.showAfterRedirect\n    };\n  }\n  function clear(state) {\n    var _state$value;\n    // if showAfterRedirect flag is true the alert is not cleared \n    // for one route change (e.g. after successful registration)\n    if ((_state$value = state.value) !== null && _state$value !== void 0 && _state$value.showAfterRedirect) {\n      state.value.showAfterRedirect = false;\n    } else {\n      state.value = null;\n    }\n  }\n}","map":{"version":3,"names":["createSlice","name","initialState","createInitialState","reducers","createReducers","slice","alertActions","actions","alertReducer","reducer","value","success","error","clear","state","action","_action$payload","_action$payload2","type","message","payload","showAfterRedirect","_action$payload3","_action$payload4","_state$value"],"sources":["F:/TestPro/simple-login-ui-react-redux/src/_store/alert.slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// create slice\r\n\r\nconst name = 'alert';\r\nconst initialState = createInitialState();\r\nconst reducers = createReducers();\r\nconst slice = createSlice({ name, initialState, reducers });\r\n\r\n// exports\r\n\r\nexport const alertActions = { ...slice.actions };\r\nexport const alertReducer = slice.reducer;\r\n\r\n// implementation\r\n\r\nfunction createInitialState() {\r\n    return {\r\n        value: null\r\n    }\r\n}\r\n\r\nfunction createReducers() {\r\n    return {\r\n        success,\r\n        error,\r\n        clear\r\n    };\r\n\r\n    // payload can be a string message ('alert message') or \r\n    // an object ({ message: 'alert message', showAfterRedirect: true })\r\n    function success(state, action) {\r\n        state.value = {\r\n            type: 'alert-success',\r\n            message: action.payload?.message || action.payload,\r\n            showAfterRedirect: action.payload?.showAfterRedirect\r\n        };\r\n    }\r\n\r\n    function error(state, action) {\r\n        state.value = {\r\n            type: 'alert-danger',\r\n            message: action.payload?.message || action.payload,\r\n            showAfterRedirect: action.payload?.showAfterRedirect\r\n        };\r\n    }\r\n\r\n    function clear(state) {\r\n        // if showAfterRedirect flag is true the alert is not cleared \r\n        // for one route change (e.g. after successful registration)\r\n        if (state.value?.showAfterRedirect) {\r\n            state.value.showAfterRedirect = false;\r\n        } else {\r\n            state.value = null;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;;AAEA,MAAMC,IAAI,GAAG,OAAO;AACpB,MAAMC,YAAY,GAAGC,kBAAkB,EAAE;AACzC,MAAMC,QAAQ,GAAGC,cAAc,EAAE;AACjC,MAAMC,KAAK,GAAGN,WAAW,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEE;AAAS,CAAC,CAAC;;AAE3D;;AAEA,OAAO,MAAMG,YAAY,GAAG;EAAE,GAAGD,KAAK,CAACE;AAAQ,CAAC;AAChD,OAAO,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;;AAEzC;;AAEA,SAASP,kBAAkBA,CAAA,EAAG;EAC1B,OAAO;IACHQ,KAAK,EAAE;EACX,CAAC;AACL;AAEA,SAASN,cAAcA,CAAA,EAAG;EACtB,OAAO;IACHO,OAAO;IACPC,KAAK;IACLC;EACJ,CAAC;;EAED;EACA;EACA,SAASF,OAAOA,CAACG,KAAK,EAAEC,MAAM,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IAC5BH,KAAK,CAACJ,KAAK,GAAG;MACVQ,IAAI,EAAE,eAAe;MACrBC,OAAO,EAAE,EAAAH,eAAA,GAAAD,MAAM,CAACK,OAAO,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBG,OAAO,KAAIJ,MAAM,CAACK,OAAO;MAClDC,iBAAiB,GAAAJ,gBAAA,GAAEF,MAAM,CAACK,OAAO,cAAAH,gBAAA,uBAAdA,gBAAA,CAAgBI;IACvC,CAAC;EACL;EAEA,SAAST,KAAKA,CAACE,KAAK,EAAEC,MAAM,EAAE;IAAA,IAAAO,gBAAA,EAAAC,gBAAA;IAC1BT,KAAK,CAACJ,KAAK,GAAG;MACVQ,IAAI,EAAE,cAAc;MACpBC,OAAO,EAAE,EAAAG,gBAAA,GAAAP,MAAM,CAACK,OAAO,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBH,OAAO,KAAIJ,MAAM,CAACK,OAAO;MAClDC,iBAAiB,GAAAE,gBAAA,GAAER,MAAM,CAACK,OAAO,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBF;IACvC,CAAC;EACL;EAEA,SAASR,KAAKA,CAACC,KAAK,EAAE;IAAA,IAAAU,YAAA;IAClB;IACA;IACA,KAAAA,YAAA,GAAIV,KAAK,CAACJ,KAAK,cAAAc,YAAA,eAAXA,YAAA,CAAaH,iBAAiB,EAAE;MAChCP,KAAK,CAACJ,KAAK,CAACW,iBAAiB,GAAG,KAAK;IACzC,CAAC,MAAM;MACHP,KAAK,CAACJ,KAAK,GAAG,IAAI;IACtB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}