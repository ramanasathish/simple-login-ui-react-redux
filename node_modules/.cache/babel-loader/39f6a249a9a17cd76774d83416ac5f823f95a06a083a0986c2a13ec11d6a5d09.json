{"ast":null,"code":"import { store, authActions } from '_store';\nexport const fetchWrapper = {\n  get: request('GET'),\n  post: request('POST'),\n  put: request('PUT'),\n  delete: request('DELETE')\n};\nfunction request(method) {\n  return (url, body) => {\n    const requestOptions = {\n      method,\n      headers: authHeader(url)\n    };\n    if (body) {\n      requestOptions.headers['Content-Type'] = 'application/json';\n      requestOptions.body = JSON.stringify(body);\n    }\n    return fetch(url, requestOptions).then(handleResponse);\n  };\n}\n\n// helper functions\n\nfunction authHeader(url) {\n  // return auth header with jwt if user is logged in and request is to the api url\n  const token = authToken();\n  const isLoggedIn = !!token;\n  const isApiUrl = url.startsWith(process.env.REACT_APP_API_URL);\n  if (isLoggedIn && isApiUrl) {\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  } else {\n    return {};\n  }\n}\nfunction authToken() {\n  var _store$getState$auth$;\n  return (_store$getState$auth$ = store.getState().auth.value) === null || _store$getState$auth$ === void 0 ? void 0 : _store$getState$auth$.token;\n}\nasync function handleResponse(response) {\n  var _response$headers, _response$headers$get;\n  const isJson = (_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : (_response$headers$get = _response$headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n  const data = isJson ? await response.json() : null;\n\n  // check for error response\n  if (!response.ok) {\n    if ([401, 403].includes(response.status) && authToken()) {\n      // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n      const logout = () => store.dispatch(authActions.logout());\n      logout();\n    }\n\n    // get error message from body or default to response status\n    const error = data && data.message || response.status;\n    return Promise.reject(error);\n  }\n  return data;\n}","map":{"version":3,"names":["store","authActions","fetchWrapper","get","request","post","put","delete","method","url","body","requestOptions","headers","authHeader","JSON","stringify","fetch","then","handleResponse","token","authToken","isLoggedIn","isApiUrl","startsWith","process","env","REACT_APP_API_URL","Authorization","_store$getState$auth$","getState","auth","value","response","_response$headers","_response$headers$get","isJson","includes","data","json","ok","status","logout","dispatch","error","message","Promise","reject"],"sources":["F:/TestPro/simple-login-ui-react-redux/src/_helpers/fetch-wrapper.js"],"sourcesContent":["import { store, authActions } from '_store';\r\n\r\nexport const fetchWrapper = {\r\n    get: request('GET'),\r\n    post: request('POST'),\r\n    put: request('PUT'),\r\n    delete: request('DELETE')\r\n};\r\n\r\nfunction request(method) {\r\n    return (url, body) => {\r\n        const requestOptions = {\r\n            method,\r\n            headers: authHeader(url)\r\n        };\r\n        if (body) {\r\n            requestOptions.headers['Content-Type'] = 'application/json';\r\n            requestOptions.body = JSON.stringify(body);\r\n        }\r\n        return fetch(url, requestOptions).then(handleResponse);\r\n    }\r\n}\r\n\r\n// helper functions\r\n\r\nfunction authHeader(url) {\r\n    // return auth header with jwt if user is logged in and request is to the api url\r\n    const token = authToken();\r\n    const isLoggedIn = !!token;\r\n    const isApiUrl = url.startsWith(process.env.REACT_APP_API_URL);\r\n    if (isLoggedIn && isApiUrl) {\r\n        return { Authorization: `Bearer ${token}` };\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nfunction authToken() {\r\n    return store.getState().auth.value?.token;\r\n}\r\n\r\nasync function handleResponse(response) {\r\n    const isJson = response.headers?.get('content-type')?.includes('application/json');\r\n    const data = isJson ? await response.json() : null;\r\n\r\n    // check for error response\r\n    if (!response.ok) {\r\n        if ([401, 403].includes(response.status) && authToken()) {\r\n            // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n            const logout = () => store.dispatch(authActions.logout());\r\n            logout();\r\n        }\r\n\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n}"],"mappings":"AAAA,SAASA,KAAK,EAAEC,WAAW,QAAQ,QAAQ;AAE3C,OAAO,MAAMC,YAAY,GAAG;EACxBC,GAAG,EAAEC,OAAO,CAAC,KAAK,CAAC;EACnBC,IAAI,EAAED,OAAO,CAAC,MAAM,CAAC;EACrBE,GAAG,EAAEF,OAAO,CAAC,KAAK,CAAC;EACnBG,MAAM,EAAEH,OAAO,CAAC,QAAQ;AAC5B,CAAC;AAED,SAASA,OAAOA,CAACI,MAAM,EAAE;EACrB,OAAO,CAACC,GAAG,EAAEC,IAAI,KAAK;IAClB,MAAMC,cAAc,GAAG;MACnBH,MAAM;MACNI,OAAO,EAAEC,UAAU,CAACJ,GAAG;IAC3B,CAAC;IACD,IAAIC,IAAI,EAAE;MACNC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;MAC3DD,cAAc,CAACD,IAAI,GAAGI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAC9C;IACA,OAAOM,KAAK,CAACP,GAAG,EAAEE,cAAc,CAAC,CAACM,IAAI,CAACC,cAAc,CAAC;EAC1D,CAAC;AACL;;AAEA;;AAEA,SAASL,UAAUA,CAACJ,GAAG,EAAE;EACrB;EACA,MAAMU,KAAK,GAAGC,SAAS,EAAE;EACzB,MAAMC,UAAU,GAAG,CAAC,CAACF,KAAK;EAC1B,MAAMG,QAAQ,GAAGb,GAAG,CAACc,UAAU,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;EAC9D,IAAIL,UAAU,IAAIC,QAAQ,EAAE;IACxB,OAAO;MAAEK,aAAa,EAAG,UAASR,KAAM;IAAE,CAAC;EAC/C,CAAC,MAAM;IACH,OAAO,CAAC,CAAC;EACb;AACJ;AAEA,SAASC,SAASA,CAAA,EAAG;EAAA,IAAAQ,qBAAA;EACjB,QAAAA,qBAAA,GAAO5B,KAAK,CAAC6B,QAAQ,EAAE,CAACC,IAAI,CAACC,KAAK,cAAAH,qBAAA,uBAA3BA,qBAAA,CAA6BT,KAAK;AAC7C;AAEA,eAAeD,cAAcA,CAACc,QAAQ,EAAE;EAAA,IAAAC,iBAAA,EAAAC,qBAAA;EACpC,MAAMC,MAAM,IAAAF,iBAAA,GAAGD,QAAQ,CAACpB,OAAO,cAAAqB,iBAAA,wBAAAC,qBAAA,GAAhBD,iBAAA,CAAkB9B,GAAG,CAAC,cAAc,CAAC,cAAA+B,qBAAA,uBAArCA,qBAAA,CAAuCE,QAAQ,CAAC,kBAAkB,CAAC;EAClF,MAAMC,IAAI,GAAGF,MAAM,GAAG,MAAMH,QAAQ,CAACM,IAAI,EAAE,GAAG,IAAI;;EAElD;EACA,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;IACd,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACH,QAAQ,CAACJ,QAAQ,CAACQ,MAAM,CAAC,IAAIpB,SAAS,EAAE,EAAE;MACrD;MACA,MAAMqB,MAAM,GAAGA,CAAA,KAAMzC,KAAK,CAAC0C,QAAQ,CAACzC,WAAW,CAACwC,MAAM,EAAE,CAAC;MACzDA,MAAM,EAAE;IACZ;;IAEA;IACA,MAAME,KAAK,GAAIN,IAAI,IAAIA,IAAI,CAACO,OAAO,IAAKZ,QAAQ,CAACQ,MAAM;IACvD,OAAOK,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;EAChC;EAEA,OAAON,IAAI;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}